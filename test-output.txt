
> untitled-game@0.0.0 test
> vitest run


[1m[7m[36m RUN [39m[27m[22m [36mv2.1.9 [39m[90mC:/dev/personal_projects/untitled_game[39m

 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mComponent Creation[2m > [22mshould create a player component
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mComponent Creation[2m > [22mshould create multiple instances with consistent type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mComponent Type[2m > [22mshould have type property that is read-only in practice
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mMarker Component Behavior[2m > [22mshould function as a marker component with no additional properties
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mMarker Component Behavior[2m > [22mshould not have any methods beyond constructor
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mMarker Component Behavior[2m > [22mshould be lightweight with minimal memory footprint
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mECS Integration[2m > [22mshould be usable as a filter component for player systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mECS Integration[2m > [22mshould work with entity component filtering patterns
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mECS Integration[2m > [22mshould support instanceof checks
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mECS Integration[2m > [22mshould integrate with player-specific systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mPlayer State Management[2m > [22mshould indicate player entity status
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mPlayer State Management[2m > [22mshould work with player identification systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mPlayer State Management[2m > [22mshould support player-specific game logic
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mGame State Integration[2m > [22mshould work with save/load systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mGame State Integration[2m > [22mshould support player state persistence
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mGame State Integration[2m > [22mshould integrate with player progression systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mSerialization Compatibility[2m > [22mshould serialize to minimal JSON structure
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle array serialization of multiple player components
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mSerialization Compatibility[2m > [22mshould preserve player state in save files
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mComponent Equality[2m > [22mshould create distinct instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mComponent Equality[2m > [22mshould support type-based comparison for ECS systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mPerformance Characteristics[2m > [22mshould create components efficiently for large player counts
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mEdge Cases and Invalid States[2m > [22mshould handle multiple player components on same entity
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mEdge Cases and Invalid States[2m > [22mshould work with empty component arrays
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mEdge Cases and Invalid States[2m > [22mshould handle null/undefined component checks gracefully
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mState Transition Testing[2m > [22mshould maintain consistent state during component lifecycle
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mState Transition Testing[2m > [22mshould support valid state transitions in game systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mState Transition Testing[2m > [22mshould prevent invalid state transitions
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mAdvanced Game Mechanics[2m > [22mshould support single-player game mechanics
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mAdvanced Game Mechanics[2m > [22mshould work with multiplayer identification systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mAdvanced Game Mechanics[2m > [22mshould support player-specific input handling
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PlayerComponent.test.ts[2m > [22mPlayerComponent[2m > [22mAdvanced Game Mechanics[2m > [22mshould integrate with player-specific camera systems
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mComplete Player Movement Workflow[2m > [22mshould handle complete movement workflow: input Î“Ã¥Ã† velocity Î“Ã¥Ã† position Î“Ã¥Ã† rendering
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mComplete Player Movement Workflow[2m > [22mshould handle diagonal movement correctly
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mComplete Player Movement Workflow[2m > [22mshould handle movement at map boundaries
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mItem Pickup Workflow[2m > [22mshould handle complete pickup workflow: detection Î“Ã¥Ã† collection Î“Ã¥Ã† inventory update
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mItem Pickup Workflow[2m > [22mshould handle item placement workflow
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mItem Pickup Workflow[2m > [22mshould handle pickup failure when no items present
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mCollision Detection Preventing Invalid Movements[2m > [22mshould prevent movement into non-walkable entities
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mCollision Detection Preventing Invalid Movements[2m > [22mshould allow movement through pickable entities
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mCollision Detection Preventing Invalid Movements[2m > [22mshould handle movable entity pushing
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mGame State Persistence Across Operations[2m > [22mshould persist entity changes across multiple system updates
 [32mÎ“Â£Ã´[39m src/game/__tests__/gameplayScenarios.test.ts[2m > [22mCore Gameplay Scenarios[2m > [22mGame State Persistence Across Operations[2m > [22mshould maintain consistent game state through complex interactions
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mspritesheetsAtom and related functionality[2m > [22mshould initialize with empty spritesheet array
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mspritesheetsAtom and related functionality[2m > [22mshould add spritesheet using addSpritesheetAtom
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mspritesheetsAtom and related functionality[2m > [22mshould add multiple spritesheets maintaining order
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mspritesheetsAtom and related functionality[2m > [22mshould preserve existing spritesheets when adding new ones
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTexture function[2m > [22mshould return texture from spritesheet when found
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTexture function[2m > [22mshould return null when texture not found
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTexture function[2m > [22mshould search through multiple spritesheets
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTexture function[2m > [22mshould return first matching texture if found in multiple spritesheets
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTexture function[2m > [22mshould return null when no spritesheets exist
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mmapConfigAtom and related functionality[2m > [22mshould initialize mapConfigAtom as undefined
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mmapConfigAtom and related functionality[2m > [22mshould update map config using updateMapConfigAtom
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mmapConfigAtom and related functionality[2m > [22mshould handle partial updates to map config
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mmapConfigAtom and related functionality[2m > [22mshould overwrite existing properties in map config
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mmapConfigAtom and related functionality[2m > [22mshould handle update when mapConfigAtom is initially undefined
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTileSizeAtom[2m > [22mshould return tileSize from mapConfig when available
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTileSizeAtom[2m > [22mshould return 0 when mapConfig is undefined
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTileSizeAtom[2m > [22mshould return 0 when mapConfig exists but tileSize is undefined
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTileSizeAtom[2m > [22mshould return 0 when tileSize is null
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mgetTileSizeAtom[2m > [22mshould handle various tileSize values correctly
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mentitiesAtom[2m > [22mshould initialize with empty entity array
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mentitiesAtom[2m > [22mshould store and retrieve entities
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mentitiesAtom[2m > [22mshould handle entity updates
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22msystemsAtom[2m > [22mshould initialize with empty systems array
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22msystemsAtom[2m > [22mshould store and retrieve systems
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mmapAtom[2m > [22mshould initialize with a new GameMap instance
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mmapAtom[2m > [22mshould allow setting a different GameMap instance
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mplayerAtom[2m > [22mshould return undefined when no entities exist
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mplayerAtom[2m > [22mshould return undefined when no player component exists
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mplayerAtom[2m > [22mshould return player entity when player component exists
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mplayerAtom[2m > [22mshould return first player entity when multiple players exist
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22mplayerAtom[2m > [22mshould update when entities array changes
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22matom integration and state consistency[2m > [22mshould maintain independent state between different atoms
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22matom integration and state consistency[2m > [22mshould handle derived atom updates when base atoms change
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22matom integration and state consistency[2m > [22mshould handle playerAtom updates when entitiesAtom changes
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22merror handling and edge cases[2m > [22mshould handle null/undefined values gracefully where supported
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22merror handling and edge cases[2m > [22mshould handle empty arrays and objects
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/Atoms.test.ts[2m > [22mAtoms - Jotai State Management[2m > [22merror handling and edge cases[2m > [22mshould handle malformed spritesheet objects
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mKey Event Processing[2m > [22mshould register keydown and keyup event listeners
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mKey Event Processing[2m > [22mshould handle keydown events and mark as changed
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mKey Event Processing[2m > [22mshould handle keyup events and update state
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mKey Event Processing[2m > [22mshould only update when keys have changed
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mMovement Input Handling[2m > [22mshould set upward velocity on ArrowUp key
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mMovement Input Handling[2m > [22mshould set downward velocity on ArrowDown key
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mMovement Input Handling[2m > [22mshould set leftward velocity on ArrowLeft key
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mMovement Input Handling[2m > [22mshould set rightward velocity on ArrowRight key
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mMovement Input Handling[2m > [22mshould handle diagonal movement with multiple keys
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mMovement Input Handling[2m > [22mshould handle opposing keys correctly (last key wins)
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mMovement Input Handling[2m > [22mshould reset velocity to zero when no movement keys are pressed
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mInteraction Input Handling[2m > [22mshould add InteractingComponent on E key press
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mInteraction Input Handling[2m > [22mshould add HandlingComponent on space key press
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mInteraction Input Handling[2m > [22mshould handle multiple interaction keys simultaneously
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mInteraction Input Handling[2m > [22mshould handle movement and interaction keys together
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mInteraction Input Handling[2m > [22mshould not add interaction components when keys are released
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle empty entities array
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle null/undefined map
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould require exactly one player entity
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle player entity without velocity component
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle unknown key presses gracefully
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould maintain key state correctly across multiple updates
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/KeyboardInputSystem.test.ts[2m > [22mKeyboardInputSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould properly reset hasChanged flag after processing
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mEntity Position Updates[2m > [22mmanual setComponent test for position
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mEntity Position Updates[2m > [22mshould update entity position based on velocity
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mEntity Position Updates[2m > [22mshould reset velocity to zero after processing
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mEntity Position Updates[2m > [22mshould not move entity if velocity is zero
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mEntity Position Updates[2m > [22mshould not move entity without position component
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mEntity Position Updates[2m > [22mshould not move entity without velocity component
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mCollision Detection and Validation[2m > [22mshould prevent movement to invalid map positions
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mCollision Detection and Validation[2m > [22mshould allow movement through pickable entities
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mCollision Detection and Validation[2m > [22mshould prevent movement when blocked by immovable entity
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mCollision Detection and Validation[2m > [22mshould push movable entities when possible
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mCollision Detection and Validation[2m > [22mshould prevent pushing when movable entity cannot move
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle empty entities array
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle null/undefined entities
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle null/undefined map
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle multiple entities with complex interactions
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle diagonal movement correctly
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/MovementSystem.test.ts[2m > [22mMovementSystem[2m > [22mSystem Edge Cases and Validation[2m > [22mshould handle negative velocity correctly
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mItem Collection Mechanics[2m > [22mshould pick up item when player has handling component and no carried item
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mItem Collection Mechanics[2m > [22mshould place item when player has carried item component
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mItem Collection Mechanics[2m > [22mshould handle multiple items at same position and pick up first one
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mEntity State Changes During Pickup Operations[2m > [22mshould properly transition item from map to inventory
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mEntity State Changes During Pickup Operations[2m > [22mshould properly transition item from inventory to map
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mEntity State Changes During Pickup Operations[2m > [22mshould always remove handling component after processing
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mInventory Management and Item Handling[2m > [22mshould maintain item entity reference in carried item component
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mInventory Management and Item Handling[2m > [22mshould handle inventory state transitions correctly
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mInventory Management and Item Handling[2m > [22mshould not affect other player components during item operations
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mSystem Entity Filtering[2m > [22mshould only process pickable entities
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mSystem Entity Filtering[2m > [22mshould filter entities by position correctly
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mSystem Entity Filtering[2m > [22mshould require both position and pickable components for pickup
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mFailure Scenarios[2m > [22mshould handle missing player entity gracefully
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mFailure Scenarios[2m > [22mshould handle player without position component
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mFailure Scenarios[2m > [22mshould handle player without handling component
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mFailure Scenarios[2m > [22mshould handle invalid carried item entity reference
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mFailure Scenarios[2m > [22mshould handle empty entities array
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/PickupSystem.test.ts[2m > [22mPickupSystem[2m > [22mFailure Scenarios[2m > [22mshould handle no items at player position
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mSystem Instantiation and Basic Operation[2m > [22mshould instantiate all systems without errors
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mSystem Instantiation and Basic Operation[2m > [22mshould run all systems without throwing errors
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mSystem Instantiation and Basic Operation[2m > [22mshould handle systems with entities but no matching components
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mSystem Integration Verification[2m > [22mshould demonstrate systems can work with mocked dependencies
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mSystem Integration Verification[2m > [22mshould handle systems processing with component operations
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mSystem Coordination and Coexistence[2m > [22mshould run multiple systems in sequence without interference
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mSystem Coordination and Coexistence[2m > [22mshould handle rapid sequential system updates without state conflicts
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mSystem Coordination and Coexistence[2m > [22mshould maintain system independence with different entity sets
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mError Handling and Robustness[2m > [22mshould handle null or undefined entities gracefully
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mError Handling and Robustness[2m > [22mshould handle component operation failures gracefully
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsSystemIntegrationBasic.test.ts[2m > [22mECS System Integration Tests[2m > [22mError Handling and Robustness[2m > [22mshould continue functioning after mock function failures
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mComponent Creation[2m > [22mshould create a sprite component with valid sprite name
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mComponent Creation[2m > [22mshould create component with different sprite types
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mComponent Creation[2m > [22mshould set sprite size from tile size atom
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mError Handling[2m > [22mshould throw error when texture is not found
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mError Handling[2m > [22mshould handle different invalid sprite names
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mError Handling[2m > [22mshould provide meaningful error messages
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mComponent Type[2m > [22mshould maintain type consistency across instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mPixi.js Integration[2m > [22mshould create Pixi.js Sprite instance
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mPixi.js Integration[2m > [22mshould pass texture to Pixi.js Sprite constructor
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mPixi.js Integration[2m > [22mshould handle different texture sizes
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mSprite Properties[2m > [22mshould have access to sprite properties
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mSprite Properties[2m > [22mshould allow sprite property modification
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mSprite Properties[2m > [22mshould support sprite visibility toggle
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mTile Size Integration[2m > [22mshould use different tile sizes
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mTile Size Integration[2m > [22mshould handle non-square tile sizes
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mTile Size Integration[2m > [22mshould call setSize on sprite creation
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mRendering System Integration[2m > [22mshould be compatible with rendering systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mRendering System Integration[2m > [22mshould support sprite positioning
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mRendering System Integration[2m > [22mshould work with sprite transformation
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mResource Management[2m > [22mshould handle sprite cleanup
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mResource Management[2m > [22mshould support sprite destruction
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mDifferent Sprite Types[2m > [22mshould handle player sprites
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mDifferent Sprite Types[2m > [22mshould handle environment sprites
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mDifferent Sprite Types[2m > [22mshould handle item sprites
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mEdge Cases[2m > [22mshould handle empty sprite names
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mEdge Cases[2m > [22mshould handle special character sprite names
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mEdge Cases[2m > [22mshould handle very long sprite names
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mSerialization Considerations[2m > [22mshould have serializable component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mSerialization Considerations[2m > [22mshould handle component identification
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/SpriteComponent.test.ts[2m > [22mSpriteComponent[2m > [22mSerialization Considerations[2m > [22mshould preserve sprite reference for ECS operations
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mComponent Creation[2m > [22mshould create a walkable component
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mComponent Creation[2m > [22mshould create multiple instances with consistent type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mComponent Type[2m > [22mshould have type property that is read-only in practice
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mMarker Component Behavior[2m > [22mshould function as a marker component with no additional properties
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mMarker Component Behavior[2m > [22mshould not have any methods beyond constructor
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mMarker Component Behavior[2m > [22mshould be lightweight with minimal memory footprint
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mECS Integration[2m > [22mshould be usable as a filter component for collision systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mECS Integration[2m > [22mshould work with entity component filtering patterns
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mECS Integration[2m > [22mshould support instanceof checks
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mECS Integration[2m > [22mshould integrate with movement systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mCollision Detection Integration[2m > [22mshould indicate walkable terrain
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mCollision Detection Integration[2m > [22mshould work with pathfinding systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mCollision Detection Integration[2m > [22mshould support collision boundary detection
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mMovement System Integration[2m > [22mshould work with player movement validation
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mMovement System Integration[2m > [22mshould support NPC movement systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mMovement System Integration[2m > [22mshould integrate with movement speed calculations
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mMovement System Integration[2m > [22mshould work with dynamic terrain changes
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mGame Map Integration[2m > [22mshould support tile-based collision detection
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mGame Map Integration[2m > [22mshould work with procedural map generation
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mGame Map Integration[2m > [22mshould support multi-layer map systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mSerialization Compatibility[2m > [22mshould serialize to minimal JSON structure
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle map serialization with walkable components
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mSerialization Compatibility[2m > [22mshould preserve terrain state in save files
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mComponent Equality[2m > [22mshould create distinct instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mComponent Equality[2m > [22mshould support type-based comparison for collision systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mPerformance Characteristics[2m > [22mshould create components efficiently for large maps
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mAdvanced Game Mechanics[2m > [22mshould support conditional walkability
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mAdvanced Game Mechanics[2m > [22mshould work with teleportation systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mAdvanced Game Mechanics[2m > [22mshould support area-of-effect movement restrictions
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/WalkableComponent.test.ts[2m > [22mWalkableComponent[2m > [22mAdvanced Game Mechanics[2m > [22mshould integrate with physics-based movement
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mComponent Creation[2m > [22mshould create a handling component
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mComponent Creation[2m > [22mshould create multiple instances with consistent type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mComponent Type[2m > [22mshould have type property that is read-only in practice
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mMarker Component Behavior[2m > [22mshould function as a marker component with no additional properties
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mMarker Component Behavior[2m > [22mshould not have any methods beyond constructor
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mMarker Component Behavior[2m > [22mshould be lightweight with minimal memory footprint
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mECS Integration[2m > [22mshould be usable as a filter component for handling systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mECS Integration[2m > [22mshould work with entity component filtering patterns
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mECS Integration[2m > [22mshould support instanceof checks
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mECS Integration[2m > [22mshould integrate with handling game mechanics
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mInteraction Handling Logic[2m > [22mshould indicate active interaction handling state
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mInteraction Handling Logic[2m > [22mshould work with interaction processing systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mInteraction Handling Logic[2m > [22mshould support interaction queue management
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mGame System Integration[2m > [22mshould work with input handling systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mGame System Integration[2m > [22mshould support event handling mechanics
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mGame System Integration[2m > [22mshould work with command processing systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mGame System Integration[2m > [22mshould integrate with state machine transitions
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mConcurrency and Processing[2m > [22mshould support concurrent handling operations
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mConcurrency and Processing[2m > [22mshould work with handling priority systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mConcurrency and Processing[2m > [22mshould support handling delegation patterns
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mSerialization Compatibility[2m > [22mshould serialize to minimal JSON structure
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle array serialization of multiple handlers
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mSerialization Compatibility[2m > [22mshould preserve handling state in save files
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mComponent Lifecycle[2m > [22mshould represent active handling state
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mComponent Lifecycle[2m > [22mshould support handling state transitions
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mComponent Equality[2m > [22mshould create distinct instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mComponent Equality[2m > [22mshould support type-based comparison for ECS systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mPerformance Characteristics[2m > [22mshould create components efficiently for frequent handling operations
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mError Handling and Edge Cases[2m > [22mshould maintain consistency under rapid creation/destruction
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/HandlingComponent.test.ts[2m > [22mHandlingComponent[2m > [22mError Handling and Edge Cases[2m > [22mshould work with complex handling scenarios
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mComponent Creation[2m > [22mshould create a render in sidebar component
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mComponent Creation[2m > [22mshould create multiple instances with consistent type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mComponent Type[2m > [22mshould have type property that is read-only in practice
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mMarker Component Behavior[2m > [22mshould function as a marker component with no additional properties
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mMarker Component Behavior[2m > [22mshould not have any methods beyond constructor
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mMarker Component Behavior[2m > [22mshould be lightweight with minimal memory footprint
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mECS Integration[2m > [22mshould be usable as a filter component for sidebar rendering systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mECS Integration[2m > [22mshould work with entity component filtering patterns
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mECS Integration[2m > [22mshould support instanceof checks
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mECS Integration[2m > [22mshould integrate with UI rendering systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mUI System Integration[2m > [22mshould indicate sidebar rendering requirement
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mUI System Integration[2m > [22mshould work with sidebar layout systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mUI System Integration[2m > [22mshould support UI element categorization
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mRendering System Integration[2m > [22mshould work with dual-pane rendering systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mRendering System Integration[2m > [22mshould support conditional rendering logic
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mRendering System Integration[2m > [22mshould integrate with layout management
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mRendering System Integration[2m > [22mshould work with responsive UI systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mSerialization Compatibility[2m > [22mshould serialize to minimal JSON structure
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle array serialization of multiple sidebar components
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mSerialization Compatibility[2m > [22mshould preserve UI state in save files
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mComponent Equality[2m > [22mshould create distinct instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mComponent Equality[2m > [22mshould support type-based comparison for ECS systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mPerformance Characteristics[2m > [22mshould create components efficiently for UI operations
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mGame UI Integration[2m > [22mshould support inventory sidebar rendering
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mGame UI Integration[2m > [22mshould work with minimap sidebar rendering
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mGame UI Integration[2m > [22mshould support status display in sidebar
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/RenderInSidebarComponent.test.ts[2m > [22mRenderInSidebarComponent[2m > [22mGame UI Integration[2m > [22mshould handle dynamic sidebar content
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mComponent Creation[2m > [22mshould create an interacting component
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mComponent Creation[2m > [22mshould create multiple instances with consistent type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mComponent Type[2m > [22mshould have type property that is read-only in practice
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mMarker Component Behavior[2m > [22mshould function as a marker component with no additional properties
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mMarker Component Behavior[2m > [22mshould not have any methods beyond constructor
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mMarker Component Behavior[2m > [22mshould be lightweight with minimal memory footprint
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mECS Integration[2m > [22mshould be usable as a filter component for interaction systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mECS Integration[2m > [22mshould work with entity component filtering patterns
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mECS Integration[2m > [22mshould support instanceof checks
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mECS Integration[2m > [22mshould integrate with interaction game mechanics
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mGame State Management[2m > [22mshould indicate active interaction state
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mGame State Management[2m > [22mshould work with interaction state tracking
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mGame State Management[2m > [22mshould support interaction session management
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mInteraction System Integration[2m > [22mshould work with player-NPC interaction systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mInteraction System Integration[2m > [22mshould support object interaction mechanics
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mInteraction System Integration[2m > [22mshould work with interaction cooldown systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mInteraction System Integration[2m > [22mshould integrate with interaction range detection
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mSerialization Compatibility[2m > [22mshould serialize to minimal JSON structure
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle array serialization of multiple interactions
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mSerialization Compatibility[2m > [22mshould preserve interaction state in save files
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mComponent Lifecycle[2m > [22mshould represent temporary interaction state
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mComponent Lifecycle[2m > [22mshould support interaction state transitions
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mComponent Equality[2m > [22mshould create distinct instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mComponent Equality[2m > [22mshould support type-based comparison for ECS systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mPerformance Characteristics[2m > [22mshould create components efficiently for frequent interaction state changes
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mMulti-Entity Interaction Scenarios[2m > [22mshould support multiple simultaneous interactions
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/InteractingComponent.test.ts[2m > [22mInteractingComponent[2m > [22mMulti-Entity Interaction Scenarios[2m > [22mshould work with interaction exclusivity checks
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mComponent Creation[2m > [22mshould create a carried item component with valid item name
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mComponent Creation[2m > [22mshould create component with different item types
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mComponent Creation[2m > [22mshould create component with empty string item
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mComponent Creation[2m > [22mshould create component with whitespace item name
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mProperty Validation[2m > [22mshould handle special characters in item names
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mProperty Validation[2m > [22mshould handle unicode characters in item names
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mProperty Validation[2m > [22mshould handle very long item names
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mProperty Validation[2m > [22mshould handle numeric strings as item names
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mComponent Type[2m > [22mshould maintain type consistency across instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mProperty Modification[2m > [22mshould allow direct item property modification
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mProperty Modification[2m > [22mshould handle item swapping scenarios
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mProperty Modification[2m > [22mshould handle item clearing
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mInventory Management[2m > [22mshould support item identification
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mInventory Management[2m > [22mshould support item categorization
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mInventory Management[2m > [22mshould support item stack simulation
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mGame Logic Integration[2m > [22mshould work with item usage systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mGame Logic Integration[2m > [22mshould support item dropping mechanics
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mGame Logic Integration[2m > [22mshould work with quest item tracking
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle special characters in serialization
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mSerialization Compatibility[2m > [22mshould serialize empty items correctly
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle array serialization of inventory
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mComponent Equality and Comparison[2m > [22mshould create distinct instances with different items
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mComponent Equality and Comparison[2m > [22mshould support item-based comparison
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mComponent Equality and Comparison[2m > [22mshould support case-sensitive item comparison
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mEdge Cases[2m > [22mshould handle null-like strings
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/CarriedItemComponent.test.ts[2m > [22mCarriedItemComponent[2m > [22mEdge Cases[2m > [22mshould preserve string formatting
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreen[2m > [22mshould convert grid position to screen coordinates using default tile size
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreen[2m > [22mshould convert grid position to screen coordinates using provided tile size
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreen[2m > [22mshould handle zero coordinates
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreen[2m > [22mshould handle negative coordinates
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreen[2m > [22mshould handle large coordinates
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreen[2m > [22mshould handle fractional coordinates by preserving them in calculation
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreen[2m > [22mshould handle zero tile size
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreenAsTuple[2m > [22mshould convert grid position to screen coordinates tuple using default tile size
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreenAsTuple[2m > [22mshould convert grid position using custom tile size and no gap
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreenAsTuple[2m > [22mshould convert grid position using default tile size with gap
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreenAsTuple[2m > [22mshould convert grid position using custom tile size and gap
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreenAsTuple[2m > [22mshould handle zero coordinates
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreenAsTuple[2m > [22mshould handle negative coordinates
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreenAsTuple[2m > [22mshould handle zero gap
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mgridToScreenAsTuple[2m > [22mshould handle negative gap
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mscreenToGrid[2m > [22mshould convert screen position to grid coordinates using default tile size
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mscreenToGrid[2m > [22mshould convert screen position to grid coordinates using provided tile size
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mscreenToGrid[2m > [22mshould handle zero coordinates
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mscreenToGrid[2m > [22mshould handle negative coordinates by flooring toward negative infinity
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mscreenToGrid[2m > [22mshould handle fractional coordinates by flooring
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mscreenToGrid[2m > [22mshould handle exact tile boundaries
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mscreenToGrid[2m > [22mshould handle large coordinates
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mbidirectional conversion consistency[2m > [22mshould maintain consistency between gridToScreen and screenToGrid for integer coordinates
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mbidirectional conversion consistency[2m > [22mshould maintain consistency for multiple coordinate pairs
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mbidirectional conversion consistency[2m > [22mshould handle consistency with custom tile sizes
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mboundary conditions and edge cases[2m > [22mshould handle very small tile sizes
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mboundary conditions and edge cases[2m > [22mshould handle very large tile sizes
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mboundary conditions and edge cases[2m > [22mshould handle fractional tile sizes
 [32mÎ“Â£Ã´[39m src/game/map/__tests__/MappingUtils.test.ts[2m > [22mMappingUtils[2m > [22mboundary conditions and edge cases[2m > [22mshould handle when store.get returns undefined/null for tile size
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mComponent Creation[2m > [22mshould create a velocity component with valid velocity values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mComponent Creation[2m > [22mshould create component with zero velocity
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mComponent Creation[2m > [22mshould create component with positive velocities
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mComponent Creation[2m > [22mshould create component with negative velocities
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mComponent Creation[2m > [22mshould create component with fractional velocities
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mProperty Validation[2m > [22mshould handle very large velocity values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mProperty Validation[2m > [22mshould handle very small velocity values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mProperty Validation[2m > [22mshould handle very small positive values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mProperty Validation[2m > [22mshould handle Infinity values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mEdge Cases[2m > [22mshould handle NaN velocities
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mEdge Cases[2m > [22mshould handle mixed valid and invalid velocities
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mEdge Cases[2m > [22mshould handle negative zero values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mComponent Type[2m > [22mshould maintain type consistency across instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mProperty Modification[2m > [22mshould allow direct property modification
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mProperty Modification[2m > [22mshould handle velocity direction changes
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mProperty Modification[2m > [22mshould handle velocity magnitude changes
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mPhysics Calculations Compatibility[2m > [22mshould support velocity magnitude calculation
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mPhysics Calculations Compatibility[2m > [22mshould support velocity normalization
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mPhysics Calculations Compatibility[2m > [22mshould handle zero velocity normalization gracefully
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/VelocityComponent.test.ts[2m > [22mVelocityComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle serialization with zero values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mComponent Creation[2m > [22mshould create a pickable component
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mComponent Creation[2m > [22mshould create multiple instances with consistent type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mComponent Type[2m > [22mshould have type property that is read-only in practice
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mMarker Component Behavior[2m > [22mshould function as a marker component with no additional properties
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mMarker Component Behavior[2m > [22mshould not have any methods beyond constructor
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mMarker Component Behavior[2m > [22mshould be lightweight with minimal memory footprint
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mECS Integration[2m > [22mshould be usable as a filter component for pickup systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mECS Integration[2m > [22mshould work with entity component filtering patterns
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mECS Integration[2m > [22mshould support instanceof checks
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mECS Integration[2m > [22mshould integrate with pickup game mechanics
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mSerialization Compatibility[2m > [22mshould serialize to minimal JSON structure
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle array serialization of multiple components
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mComponent Equality[2m > [22mshould create distinct instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mComponent Equality[2m > [22mshould support type-based comparison for ECS systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mGame Logic Integration[2m > [22mshould support item identification for pickup systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mGame Logic Integration[2m > [22mshould work with inventory management systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PickableComponent.test.ts[2m > [22mPickableComponent[2m > [22mPerformance Characteristics[2m > [22mshould create components efficiently
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mComponent Creation[2m > [22mshould create a movable component
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mComponent Creation[2m > [22mshould create multiple instances with consistent type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mComponent Type[2m > [22mshould have type property that is read-only in practice
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mMarker Component Behavior[2m > [22mshould function as a marker component with no additional properties
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mMarker Component Behavior[2m > [22mshould not have any methods beyond constructor
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mMarker Component Behavior[2m > [22mshould be lightweight with minimal memory footprint
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mECS Integration[2m > [22mshould be usable as a filter component in ECS systems
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mECS Integration[2m > [22mshould work with entity component filtering patterns
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mECS Integration[2m > [22mshould support instanceof checks
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mSerialization Compatibility[2m > [22mshould serialize to minimal JSON structure
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle array serialization of multiple components
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mComponent Equality[2m > [22mshould create distinct instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mComponent Equality[2m > [22mshould support type-based comparison
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mComponent Immutability[2m > [22mshould have stable type after creation
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/MovableComponent.test.ts[2m > [22mMovableComponent[2m > [22mPerformance Characteristics[2m > [22mshould create components efficiently
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mMock Constructors[2m > [22mshould create Container instances
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mMock Constructors[2m > [22mshould create Sprite instances
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mMock Constructors[2m > [22mshould create Graphics instances
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mMock Constructors[2m > [22mshould create Application instances
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mMock Functionality[2m > [22mshould handle Container child management
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mMock Functionality[2m > [22mshould handle Graphics method chaining
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mMock Functionality[2m > [22mshould handle Application initialization
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mMock Functionality[2m > [22mshould handle Ticker functionality
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mAssets and Texture Management[2m > [22mshould handle texture loading
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mAssets and Texture Management[2m > [22mshould handle texture creation from sources
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mAssets and Texture Management[2m > [22mshould handle spritesheet parsing
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mMock Setup and Cleanup[2m > [22mshould clear mock history with setupPixiMocks
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mIntegration with Existing Code Patterns[2m > [22mshould work with pixiApp global pattern
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocks.test.ts[2m > [22mPixi.js Mocks[2m > [22mIntegration with Existing Code Patterns[2m > [22mshould work with container hierarchy patterns
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mFunction Exports[2m > [22mshould export addEntity function
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mFunction Exports[2m > [22mshould export addEntities function
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mFunction Exports[2m > [22mshould export removeEntity function
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mFunction Exports[2m > [22mshould export removeEntities function
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mFunction Exports[2m > [22mshould export getEntitiesWithComponents function
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mFunction Exports[2m > [22mshould export getEntity function
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mgetEntitiesWithComponents[2m > [22mshould filter entities by components
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mgetEntitiesWithComponents[2m > [22mshould handle multiple required components
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mgetEntitiesWithComponents[2m > [22mshould return empty array when no entities match
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mgetEntity[2m > [22mshould find entity by ID from store
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mgetEntity[2m > [22mshould return undefined for non-existent ID
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mgetEntity[2m > [22mshould handle empty entities array
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityUtils.test.ts[2m > [22mEntityUtils[2m > [22mEntity Store Integration[2m > [22mshould interact with store for entity operations
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mEntity Cleanup Operations[2m > [22mshould remove interacting components from entities
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mEntity Cleanup Operations[2m > [22mshould handle entities without interacting components
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mEntity Cleanup Operations[2m > [22mshould handle mixed entities (some with, some without interacting)
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mSystem Entity Filtering[2m > [22mshould properly filter entities by interacting component
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mSystem Entity Filtering[2m > [22mshould handle entities with multiple components correctly
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mSystem Entity Filtering[2m > [22mshould process all interacting entities in a single update
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mSystem Edge Cases[2m > [22mshould handle empty entities array
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mSystem Edge Cases[2m > [22mshould handle null/undefined entities array
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mSystem Edge Cases[2m > [22mshould handle undefined entities array
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mSystem Edge Cases[2m > [22mshould handle entities with null/undefined components
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mComponent Cleanup Verification[2m > [22mshould ensure interacting components are actually removed
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mComponent Cleanup Verification[2m > [22mshould preserve other components while removing interacting
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/CleanUpSystem.test.ts[2m > [22mCleanUpSystem[2m > [22mComponent Cleanup Verification[2m > [22mshould handle cleanup idempotently
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mSystem Initialization[2m > [22mshould verify system interface compatibility
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mSystem Initialization[2m > [22mshould handle placement operations through mocked dependencies
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mBresenham Line Algorithm[2m > [22mshould calculate points between two positions
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mBresenham Line Algorithm[2m > [22mshould handle horizontal line drawing
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mBresenham Line Algorithm[2m > [22mshould handle vertical line drawing
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mEntity Placement Logic[2m > [22mshould use screen to grid coordinate conversion
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mEntity Placement Logic[2m > [22mshould create entities from templates
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mEntity Placement Logic[2m > [22mshould handle component checking for existing entities
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mEntity Management Integration[2m > [22mshould add new entities through EntityUtils
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mEntity Management Integration[2m > [22mshould remove entities through EntityUtils
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/EntityPlacementSystem.test.ts[2m > [22mEntityPlacementSystem[2m > [22mEntity Management Integration[2m > [22mshould handle empty entity operations
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mComponent Creation[2m > [22mshould create a position component with valid coordinates
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mComponent Creation[2m > [22mshould create component with zero coordinates
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mComponent Creation[2m > [22mshould create component with negative coordinates
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mComponent Creation[2m > [22mshould create component with fractional coordinates
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mProperty Validation[2m > [22mshould handle very large coordinate values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mProperty Validation[2m > [22mshould handle very small coordinate values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mProperty Validation[2m > [22mshould handle Infinity values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mEdge Cases[2m > [22mshould handle NaN coordinates
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mEdge Cases[2m > [22mshould handle mixed valid and invalid coordinates
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mComponent Type[2m > [22mshould always have the correct component type
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mComponent Type[2m > [22mshould maintain type consistency across instances
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mProperty Modification[2m > [22mshould allow direct property modification
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mProperty Modification[2m > [22mshould handle property modification with edge values
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mSerialization Compatibility[2m > [22mshould be JSON serializable
 [32mÎ“Â£Ã´[39m src/game/components/individualComponents/__tests__/PositionComponent.test.ts[2m > [22mPositionComponent[2m > [22mSerialization Compatibility[2m > [22mshould handle serialization with special values
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mEntity Factory Functions[2m > [22mshould create a test entity with no components
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mEntity Factory Functions[2m > [22mshould create a test entity with provided components
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mEntity Factory Functions[2m > [22mshould create test components of all types
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mEntity Factory Functions[2m > [22mshould create entity with multiple components using factory
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mComponent Assertion Helpers[2m > [22mshould correctly assert entity has component
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mComponent Assertion Helpers[2m > [22mshould correctly assert entity does not have component
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mComponent Assertion Helpers[2m > [22mshould correctly assert component properties
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mSystem Testing Utilities[2m > [22mshould create test update args
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mSystem Testing Utilities[2m > [22mshould create mock game map
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mSystem Testing Utilities[2m > [22mshould create mock game map with entities
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mTest Environment[2m > [22mshould create isolated test environment
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mTest Environment[2m > [22mshould manage entities in test environment
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mAdvanced Utilities[2m > [22mshould create multiple test entities
 [32mÎ“Â£Ã´[39m src/__tests__/testUtils.test.ts[2m > [22mECS Test Utilities[2m > [22mAdvanced Utilities[2m > [22mshould find entities with specific components
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsIntegration.test.ts[2m > [22mECS System Integration[2m > [22mSystem Instantiation[2m > [22mshould instantiate all systems without errors
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsIntegration.test.ts[2m > [22mECS System Integration[2m > [22mSystem Instantiation[2m > [22mshould create systems with proper interfaces
 [32mÎ“Â£Ã´[39m src/game/__tests__/ecsIntegration.test.ts[2m > [22mECS System Integration[2m > [22mSystem Instantiation[2m > [22mshould handle system updates with empty entities without errors
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocksIntegration.test.ts[2m > [22mPixi.js Mocks Integration with Game Code[2m > [22mshould work with Application creation pattern
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocksIntegration.test.ts[2m > [22mPixi.js Mocks Integration with Game Code[2m > [22mshould work with Container hierarchy pattern
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocksIntegration.test.ts[2m > [22mPixi.js Mocks Integration with Game Code[2m > [22mshould work with Assets loading pattern
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocksIntegration.test.ts[2m > [22mPixi.js Mocks Integration with Game Code[2m > [22mshould work with Spritesheet pattern
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocksIntegration.test.ts[2m > [22mPixi.js Mocks Integration with Game Code[2m > [22mshould work with Sprite creation pattern
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocksIntegration.test.ts[2m > [22mPixi.js Mocks Integration with Game Code[2m > [22mshould work with Graphics drawing pattern
 [32mÎ“Â£Ã´[39m src/__tests__/pixiMocksIntegration.test.ts[2m > [22mPixi.js Mocks Integration with Game Code[2m > [22mshould work with Ticker pattern
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/ecsUtils.test.ts[2m > [22mecsUtils[2m > [22mgetEmptyPosition Integration[2m > [22mshould be available as an exported function
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/ecsUtils.test.ts[2m > [22mecsUtils[2m > [22mEntity Interface[2m > [22mshould define proper Entity type structure
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/ecsUtils.test.ts[2m > [22mecsUtils[2m > [22mEntity Interface[2m > [22mshould support entity with components
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/ecsUtils.test.ts[2m > [22mecsUtils[2m > [22mEntity Interface[2m > [22mshould support empty entity
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/ecsUtils.test.ts[2m > [22mecsUtils[2m > [22mEntity Interface[2m > [22mshould support entity ID generation patterns
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/ecsUtils.test.ts[2m > [22mecsUtils[2m > [22mEntity Interface[2m > [22mshould handle complex component combinations
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/RenderSystem.test.ts[2m > [22mRenderSystem[2m > [22mRendering System with Mocked Pixi.js[2m > [22mshould be testable with mocked Pixi.js components
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/RenderSystem.test.ts[2m > [22mRenderSystem[2m > [22mRendering System with Mocked Pixi.js[2m > [22mshould work with mocked graphics objects
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/RenderSystem.test.ts[2m > [22mRenderSystem[2m > [22mRendering System with Mocked Pixi.js[2m > [22mshould handle entity lifecycle correctly with mocks
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/RenderSystem.test.ts[2m > [22mRenderSystem[2m > [22mSystem Edge Cases[2m > [22mshould handle empty entity arrays
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/RenderSystem.test.ts[2m > [22mRenderSystem[2m > [22mSystem Edge Cases[2m > [22mshould manage container positioning
 [32mÎ“Â£Ã´[39m src/game/systems/__tests__/RenderSystem.test.ts[2m > [22mRenderSystem[2m > [22mSystem Edge Cases[2m > [22mshould clean up removed entities
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mFunction Exports[2m > [22mshould export createEntityFromTemplate function
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mFunction Exports[2m > [22mshould export createEntitiesFromTemplates function
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mcreateEntityFromTemplate[2m > [22mshould create entity with generated ID
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mcreateEntityFromTemplate[2m > [22mshould create entity with position component
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mcreateEntityFromTemplate[2m > [22mshould create entity with player component
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mcreateEntityFromTemplate[2m > [22mshould handle empty template
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mcreateEntitiesFromTemplates[2m > [22mshould handle empty templates
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mcreateEntitiesFromTemplates[2m > [22mshould create multiple entities from valid templates
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mcreateEntitiesFromTemplates[2m > [22mshould maintain template independence
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mEntityTemplate Interface[2m > [22mshould support component template structure
 [32mÎ“Â£Ã´[39m src/game/utils/__tests__/EntityFactory.test.ts[2m > [22mEntityFactory[2m > [22mEntityTemplate Interface[2m > [22mshould support template validation
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/RenderSidebarSystem.test.ts[2m > [22mRenderSidebarSystem[2m > [22mSidebar UI Rendering[2m > [22mshould handle sidebar rendering with mocked Pixi.js components
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/RenderSidebarSystem.test.ts[2m > [22mRenderSidebarSystem[2m > [22mSidebar UI Rendering[2m > [22mshould render entities with RenderInSidebar component
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/RenderSidebarSystem.test.ts[2m > [22mRenderSidebarSystem[2m > [22mSidebar UI Rendering[2m > [22mshould manage sidebar container positioning
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/RenderSidebarSystem.test.ts[2m > [22mRenderSidebarSystem[2m > [22mEntity Filtering and Management[2m > [22mshould filter entities by required components
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/RenderSidebarSystem.test.ts[2m > [22mRenderSidebarSystem[2m > [22mEntity Filtering and Management[2m > [22mshould handle entity lifecycle in sidebar
 [32mÎ“Â£Ã´[39m src/game/systems/LevelEditorSystems/__tests__/RenderSidebarSystem.test.ts[2m > [22mRenderSidebarSystem[2m > [22mEntity Filtering and Management[2m > [22mshould integrate with component system
 [32mÎ“Â£Ã´[39m src/__tests__/simple.test.ts[2m > [22mComponent Types[2m > [22mshould have all expected component types

[2m Test Files [22m [1m[32m30 passed[39m[22m[90m (30)[39m
[2m      Tests [22m [1m[32m539 passed[39m[22m[90m (539)[39m
[2m   Start at [22m 10:28:33
[2m   Duration [22m 24.69s[2m (transform 1.61s, setup 14.43s, collect 31.56s, tests 1.17s, environment 33.97s, prepare 4.79s)[22m

JUNIT report written to C:/dev/personal_projects/untitled_game/test-results.xml
