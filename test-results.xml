<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="34" failures="0" errors="0" time="1.503">
    <testsuite name="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" timestamp="2025-07-20T06:56:17.967Z" hostname="XLW-CND1300JDV" tests="34" failures="0" errors="0" skipped="0" time="0.0274979">
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Component Creation &gt; should create a player component" time="0.0065066">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Component Creation &gt; should create multiple instances with consistent type" time="0.0009498">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Component Type &gt; should always have the correct component type" time="0.0006172">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Component Type &gt; should have type property that is read-only in practice" time="0.0005797">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Marker Component Behavior &gt; should function as a marker component with no additional properties" time="0.0012719">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Marker Component Behavior &gt; should not have any methods beyond constructor" time="0.0006463">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Marker Component Behavior &gt; should be lightweight with minimal memory footprint" time="0.0005923">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; ECS Integration &gt; should be usable as a filter component for player systems" time="0.0004347">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; ECS Integration &gt; should work with entity component filtering patterns" time="0.0007408">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; ECS Integration &gt; should support instanceof checks" time="0.000536">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; ECS Integration &gt; should integrate with player-specific systems" time="0.0005298">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Player State Management &gt; should indicate player entity status" time="0.0003882">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Player State Management &gt; should work with player identification systems" time="0.0011887">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Player State Management &gt; should support player-specific game logic" time="0.0005484">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Game State Integration &gt; should work with save/load systems" time="0.0004109">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Game State Integration &gt; should support player state persistence" time="0.000523">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Game State Integration &gt; should integrate with player progression systems" time="0.0004761">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Serialization Compatibility &gt; should be JSON serializable" time="0.0008866">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Serialization Compatibility &gt; should serialize to minimal JSON structure" time="0.0002941">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Serialization Compatibility &gt; should handle array serialization of multiple player components" time="0.0007005">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Serialization Compatibility &gt; should preserve player state in save files" time="0.00042">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Component Equality &gt; should create distinct instances" time="0.0004976">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Component Equality &gt; should support type-based comparison for ECS systems" time="0.0004188">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Performance Characteristics &gt; should create components efficiently for large player counts" time="0.0006731">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Edge Cases and Invalid States &gt; should handle multiple player components on same entity" time="0.0004137">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Edge Cases and Invalid States &gt; should work with empty component arrays" time="0.0004173">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Edge Cases and Invalid States &gt; should handle null/undefined component checks gracefully" time="0.0003646">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; State Transition Testing &gt; should maintain consistent state during component lifecycle" time="0.0003218">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; State Transition Testing &gt; should support valid state transitions in game systems" time="0.0003479">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; State Transition Testing &gt; should prevent invalid state transitions" time="0.0004935">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Advanced Game Mechanics &gt; should support single-player game mechanics" time="0.0003571">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Advanced Game Mechanics &gt; should work with multiplayer identification systems" time="0.0003537">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Advanced Game Mechanics &gt; should support player-specific input handling" time="0.0003538">
        </testcase>
        <testcase classname="src/game/components/individualComponents/__tests__/PlayerComponent.test.ts" name="PlayerComponent &gt; Advanced Game Mechanics &gt; should integrate with player-specific camera systems" time="0.0003613">
        </testcase>
    </testsuite>
</testsuites>
